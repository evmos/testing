version: '3'

services:

  #######################
  # Nodes for Network 1
  #######################
  node0_1:
    container_name: node0_1
    image: "localnet/node1"
    ports:
      - "26656-26657:26656-26657"
    volumes:
      - ./build_1/node0/evmosd:/evmos:Z
      - ./build_1/node0/ethermintd:/ethermint:Z      
    command:
      - ./start.sh      
    networks:
      localnet1:
        ipv4_address: 192.167.10.2
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5    

  node1_1:
    container_name: node1_1
    image: "localnet/node1"
    ports:
      - "26659-26660:26656-26657"
    volumes:
      - ./build_1/node1/evmosd:/evmos:Z
      - ./build_1/node1/ethermintd:/ethermint:Z      
    command:
      - ./start.sh            
    networks:
      localnet1:
        ipv4_address: 192.167.10.3
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5           

  node2_1:
    container_name: node2_1
    image: "localnet/node1"
    ports:
      - "26661-26662:26656-26657"
    volumes:
      - ./build_1/node2/evmosd:/evmos:Z
      - ./build_1/node2/ethermintd:/ethermint:Z      
    command:
      - ./start.sh            
    networks:
      localnet1:
        ipv4_address: 192.167.10.4
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5           

  node3_1:
    container_name: node3_1
    image: "localnet/node1" 
    ports:
      - "26663-26664:26656-26657"
    volumes:
      - ./build_1/node3/evmosd:/evmos:Z
      - ./build_1/node3/ethermintd:/ethermint:Z      
    command:
      - ./start.sh            
    networks:
      localnet1:
        ipv4_address: 192.167.10.5
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  #######################
  # Nodes for Network 2
  #######################

  node0_2:
    container_name: node0_2
    image: "localnet/node2"
    volumes:
      - ./build_2/node0/evmosd:/evmos:Z
      - ./build_2/node0/ethermintd:/ethermint:Z      
    command:
      - ./start.sh      
    networks:
      localnet1:
        ipv4_address: 192.167.10.22
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5    

  node1_2:
    container_name: node1_2
    image: "localnet/node2"
    volumes:
      - ./build_2/node1/evmosd:/evmos:Z
      - ./build_2/node1/ethermintd:/ethermint:Z      
    command:
      - ./start.sh            
    networks:
      localnet1:
        ipv4_address: 192.167.10.23
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5           

  node2_2:
    container_name: node2_2
    image: "localnet/node2"
    volumes:
      - ./build_2/node2/evmosd:/evmos:Z
      - ./build_2/node2/ethermintd:/ethermint:Z      
    command:
      - ./start.sh            
    networks:
      localnet1:
        ipv4_address: 192.167.10.24
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5           

  node3_2:
    container_name: node3_2
    image: "localnet/node2" 
    volumes:
      - ./build_2/node3/evmosd:/evmos:Z
      - ./build_2/node3/ethermintd:/ethermint:Z      
    command:
      - ./start.sh            
    networks:
      localnet1:
        ipv4_address: 192.167.10.25
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5      

  #################################
  # Data collection & viz services
  #################################

  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: prometheus
    volumes:
      - ../prometheus/:/etc/prometheus/
      # - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus-localnet.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always
    networks:
      localnet1:
        ipv4_address: 192.167.10.6    

  grafana:
    image: grafana/grafana:main
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 8000:3000
    volumes:
      # - grafana_data:/var/lib/grafana      
      - ../grafana/provisioning/localnet:/etc/grafana/provisioning/
    env_file:
      - ../grafana/config.monitoring
    restart: always
    networks:
      localnet1:
        ipv4_address: 192.167.10.7     

  phlare:
    image: grafana/phlare:latest
    container_name: phlare
    ports:
      - "4100:4100"
    command: -config.file=/etc/phlare/config.yaml
    volumes:
      - ../phlare/phlare-localnet.yaml:/etc/phlare/config.yaml
      # - phlare_data:/data      
    restart: always
    networks:
      localnet1:
        ipv4_address: 192.167.10.8    

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
    privileged: true
    restart: always
    deploy:
      mode: global      
    networks:
      localnet1:
        ipv4_address: 192.167.10.9

  ###########
  # Tx bots
  ###########
  
  # This one makes txs to node0 of chain 1
  tx-bot1:
    image: facs95/tx-bot-dev
    container_name: tx-bot1
    depends_on:
      - node0_1
    environment:
      - ORCH_PRIV_KEY=0x1c384b3fb9a1cff8caee1e2d078bb9bc28a542dcc7ac779a445dc68b3dc2fe1f
      - RPC_URL=http://192.167.10.2:8545
    restart: always
    networks:
      localnet1:
        ipv4_address: 192.167.10.10

  # This makes txs to node0 of chain 2
  tx-bot2:
    image: facs95/tx-bot-dev
    container_name: tx-bot2
    depends_on:
      - node0_2
    environment:
      - ORCH_PRIV_KEY=0x1c384b3fb9a1cff8caee1e2d078bb9bc28a542dcc7ac779a445dc68b3dc2fe1f
      - RPC_URL=http://192.167.10.22:8545
    restart: always
    networks:
      localnet1:
        ipv4_address: 192.167.10.11     

networks:
  localnet1:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: 192.167.10.0/16